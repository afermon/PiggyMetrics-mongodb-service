version: 2
jobs:
  deploy_registry:
    docker:
      - image: docker:18.06.1-ce-git
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker build and push
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${SERVICE_NAME} .
            docker tag ${SERVICE_NAME} ${DOCKER_USER}/${IMAGE_NAME}:${CIRCLE_SHA1} 
            docker tag ${SERVICE_NAME} ${DOCKER_USER}/${IMAGE_NAME}:latest   
            docker push ${DOCKER_USER}/${IMAGE_NAME}:${CIRCLE_SHA1}
            docker push ${DOCKER_USER}/${IMAGE_NAME}:latest
  deploy_gcp:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Docker build and push
          command: |
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t ${SERVICE_NAME} .
            docker tag ${SERVICE_NAME} us.gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${CIRCLE_SHA1}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us.gcr.io
            docker push us.gcr.io/${GOOGLE_PROJECT_ID}/${IMAGE_NAME}:${CIRCLE_SHA1}
workflows:
  version: 2
  test_build_and_deploy:
    jobs:
      - deploy_registry:
          filters:
            branches:
              only: master
      - request-testing:
          type: approval
          filters:
            branches:
              only: master
      - deploy_gcp:
          requires:
            - build
            - request-testing
          filters:
            branches:
              only: master